import streamlit as st

import numpy as np
import pandas as pd

from lab6_func import *

st.set_page_config(
    page_title='–°–ê –õ–∞–± 6: –ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–µ —Ç–∞ —ñ–º–ø—É–ª—å—Å–∏–≤–Ω–µ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è',
    page_icon='üéì',
    layout='wide'
)

st.write("# –°–ê –õ–∞–± 6: –ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–µ —Ç–∞ —ñ–º–ø—É–ª—å—Å–∏–≤–Ω–µ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è")

with st.sidebar.header('1. –í–∏–±–µ—Ä—ñ—Ç—å .xlsx —Ñ–∞–π–ª'):
    uploaded_file = st.sidebar.file_uploader("–í–∏–±–µ—Ä—ñ—Ç—å .xlsx —Ñ–∞–π–ª –∑ –∫–æ–≥–Ω—ñ—Ç–∏–≤–Ω–æ—é –∫–∞—Ä—Ç–æ—é", type=["xlsx"])
    # !!!!!!!!!!!!!! change later with cleaned data
    st.sidebar.markdown("""
        [–ü—Ä–∏–∫–ª–∞–¥ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª—É](https://github.com/ZaikaBohdan/datasetsforlabs/blob/main/sa_lab6_raw_input.xlsx?raw=true)
    """)

if uploaded_file is not None:
    st.write("## –ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–∞ –∫–∞—Ä—Ç–∞")
    
    c1, c2 = st.columns(2) 

    cogn_map = pd.read_excel(uploaded_file, index_col=0)

    c1.write("### –ú–∞—Ç—Ä–∏—Ü—è")
    c1.dataframe(cogn_map)

    c1.write("### –ì—Ä–∞—Ñ")
    graph = build_graph(cogn_map, c1)

    with st.sidebar.header('2. –í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è'):
        model_type = st.sidebar.selectbox(
            '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è',
            [f'{name} –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è' for name in ["–ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–µ", "–Ü–º–ø—É–ª—å—Å–∏–≤–Ω–µ"]],
            0
        )

    # add effect from select box
    c2.write("### –°—Ç—ñ–π–∫—ñ—Å—Ç—å")

    stab_funcs = [
        check_perturbation_stability, 
        check_numerical_stability, 
        check_structural_stability
        ]
    stab_df = pd.DataFrame(
        [yes_no(func(cogn_map)) for func in stab_funcs], 
        index = ['–ó–∞ –∑–±—É—Ä–µ–Ω–Ω—è–º', '–ß–∏—Å–µ–ª—å–Ω–∞', '–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞'],
        columns=['–¢–∞–∫/–ù—ñ']
        )

    c2.dataframe(stab_df.T)

    eigvals_list = [str(val).strip('()').replace('j', 'i') for val in eigvals(cogn_map)]
    
    c2.write(f"### –í–ª–∞—Å–Ω—ñ —á–∏—Å–ª–∞ (max|Œª| = {get_spectral_radius(cogn_map): .2f})")
    c2.write(eigvals_list)

    c2.write(f"### –ü–∞—Ä–Ω—ñ —Ü–∏–∫–ª–∏")
    c2.write(find_even_cycles(cogn_map, graph)[0])

else:
    st.info('–í–∏–±–µ—Ä—ñ—Ç—å .xlsx —Ñ–∞–π–ª –∑ –≤—Ö—ñ–¥–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ —É –±–æ–∫–æ–≤–æ–º—É –≤—ñ–∫–Ω—ñ –∑–ª—ñ–≤–∞.')